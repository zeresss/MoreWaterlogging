plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {url = "https://jitpack.io"} // statement lib
	maven {url = "https://maven.wispforest.io"} // owo lib
	maven {url = "https://maven.terraformersmc.com"} // mod menu
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// statement lib
	modApi("com.github.Virtuoel:Statement:${project.statement_version}", {
		exclude group: "net.fabricmc.fabric-api"
	})

	// owo lib
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

	// mod menu
	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}